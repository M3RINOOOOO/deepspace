/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.GUI;

import deepspace.SpaceStationToUI;
import java.util.ArrayList;
import deepspace.WeaponToUI;
import deepspace.ShieldToUI;
import deepspace.HangarToUI;
import java.awt.Component;
import controller.Controller;
import deepspace.GameState;

import java.awt.Color;
/**
 *
 * @author crist
 */
public class SpaceStationView extends javax.swing.JPanel {
    DamageView damageView;
    HangarView hangarView;
    /**
     * Creates new form SpaceStationView
     */
    public SpaceStationView() {
        initComponents();
    }
    
    
    void setSpaceStation(SpaceStationToUI s){
        nombre_estacion.setText(s.getName());
        nombre_estacion.setOpaque(true);
        nombre_estacion.setBackground(Color.gray);
        
        ataque.setText(Float.toString(s.getAmmoPower()));
        defensa.setText(Float.toString(s.getShieldPower()));
        combustible.setText(Float.toString(s.getFuelUnits()));
        medallas.setText(Integer.toString(s.getnMedals()));
        
        ArrayList<WeaponToUI> weapons = s.getWeapons();
        ArrayList<ShieldToUI> shieldBoosters = s.getShieldBoosters();

        panelWeaponsMounted.removeAll();
        panelShieldsMounted.removeAll();
        panelHangarStation.removeAll();
        pendingDamage.removeAll();
        
        WeaponView weaponView;
        for(WeaponToUI w : weapons){
            weaponView = new WeaponView();
            weaponView.setWeapon(w);
            panelWeaponsMounted.add(weaponView);
        }
        
        ShieldView shieldView;
        
        for(ShieldToUI sh : shieldBoosters){
            shieldView = new ShieldView();
            shieldView.setShield(sh);
            panelShieldsMounted.add(shieldView);
        }
        
        damageView = new DamageView();
        damageView.setDamage(s.getPendingDamage());
        pendingDamage.add(damageView);
        
          
        
        hangarView = new HangarView(); 
        hangarView.setHangar(s.getHangar());
        panelHangarStation.add(hangarView);
        
        enabledButtons(s);
             
       
        repaint();
        revalidate();
        
    }
    
    void enabledButtons(SpaceStationToUI station){
        boolean hangarAvaiable = station.getHangar() != null;
        boolean shieldsInHangar = false;
        boolean weaponsInHangar = false;
        boolean elementsInHangar = false;
        if(hangarAvaiable){
            weaponsInHangar = (station.getHangar().getWeapons().size() != 0);
            shieldsInHangar = (station.getHangar().getShieldBoosters().size() != 0);
            
            elementsInHangar = weaponsInHangar || shieldsInHangar;
        }
        boolean weaponsMounted = station.getWeapons().size() != 0;
        boolean shieldsMounted = station.getShieldBoosters().size() != 0;
        
        GameState gameState = Controller.getInstance().getState();
        boolean init = gameState == GameState.INIT;
        boolean aftercombat = gameState == GameState.AFTERCOMBAT;
        
        discardHangarButton.setEnabled(hangarAvaiable && (init  || aftercombat));
        mountButton.setEnabled(hangarAvaiable && elementsInHangar && (init  || aftercombat));
        discardButton.setEnabled((elementsInHangar || weaponsMounted || shieldsMounted) && (init  || aftercombat));
    }
    
    ArrayList<Integer> getSelectedWeaponsMounted(){
        ArrayList<Integer> selectedWeaponsMounted = new ArrayList<>();
        
        int i = 0;
        for (Component c : panelWeaponsMounted.getComponents()) {
            if (((CombatElementView) c).isSelected()) {
                selectedWeaponsMounted.add(i);
            }
            i++;
        }
        
        return selectedWeaponsMounted;
    }
    
    ArrayList<Integer> getSelectedShieldsMounted(){
        ArrayList<Integer> selectedShieldsMounted = new ArrayList<>();
        
        int i = 0;
        for (Component c : panelShieldsMounted.getComponents()) {
            if (((CombatElementView) c).isSelected()) {
                selectedShieldsMounted.add(i);
            }
            i++;
        }
        
        return selectedShieldsMounted;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombre_estacion = new javax.swing.JLabel();
        titulo_ataque = new javax.swing.JLabel();
        titulo_defensa = new javax.swing.JLabel();
        titulo_combustible = new javax.swing.JLabel();
        titulo_medallas = new javax.swing.JLabel();
        ataque = new javax.swing.JLabel();
        defensa = new javax.swing.JLabel();
        combustible = new javax.swing.JLabel();
        medallas = new javax.swing.JLabel();
        pendingDamage = new javax.swing.JPanel();
        weaponsMounted = new javax.swing.JScrollPane();
        panelWeaponsMounted = new javax.swing.JPanel();
        shieldsMounted = new javax.swing.JScrollPane();
        panelShieldsMounted = new javax.swing.JPanel();
        panelHangarStation = new javax.swing.JPanel();
        mountButton = new javax.swing.JButton();
        discardButton = new javax.swing.JButton();
        discardHangarButton = new javax.swing.JButton();

        nombre_estacion.setBackground(new java.awt.Color(0, 255, 0));
        nombre_estacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombre_estacion.setText("NOMBRE ESTACIÃ“N");

        titulo_ataque.setText("Potencia de ataque :");

        titulo_defensa.setText("Potencia de Defensa :");

        titulo_combustible.setText("Nivel de combustible :");

        titulo_medallas.setText("Medallas :");

        ataque.setText("jLabel5");

        defensa.setText("jLabel6");

        combustible.setText("jLabel7");

        medallas.setText("jLabel8");

        weaponsMounted.setViewportView(panelWeaponsMounted);

        shieldsMounted.setViewportView(panelShieldsMounted);

        panelHangarStation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        mountButton.setText("Equipar");
        mountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mountButtonActionPerformed(evt);
            }
        });

        discardButton.setText("Descartar");
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        discardHangarButton.setText("Descartar Hangar Completo");
        discardHangarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardHangarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(weaponsMounted, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nombre_estacion, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(titulo_ataque)
                                    .addGap(18, 18, 18)
                                    .addComponent(ataque))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(titulo_defensa)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(defensa))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(titulo_combustible)
                                        .addComponent(titulo_medallas))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(medallas)
                                        .addComponent(combustible))))
                            .addGap(18, 18, 18)
                            .addComponent(pendingDamage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(shieldsMounted)
                        .addComponent(panelHangarStation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mountButton)
                        .addGap(18, 18, 18)
                        .addComponent(discardButton)
                        .addGap(18, 18, 18)
                        .addComponent(discardHangarButton)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pendingDamage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nombre_estacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titulo_ataque)
                            .addComponent(ataque))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titulo_defensa)
                            .addComponent(defensa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titulo_combustible)
                            .addComponent(combustible))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titulo_medallas)
                            .addComponent(medallas))))
                .addGap(18, 18, 18)
                .addComponent(weaponsMounted, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(shieldsMounted, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelHangarStation, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mountButton)
                    .addComponent(discardButton)
                    .addComponent(discardHangarButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    public void updateView(){      
       setSpaceStation(Controller.getInstance().getUIversion().getCurrentStation());
       if(Controller.getInstance().getState() == GameState.INIT || Controller.getInstance().getState() == GameState.AFTERCOMBAT){
           discardButton.setEnabled(panelHangarStation.getComponentCount() != 0 || panelShieldsMounted.getComponentCount() != 0 
                                || panelWeaponsMounted.getComponentCount() != 0);
            mountButton.setEnabled(panelHangarStation.getComponentCount() != 0);
            discardHangarButton.setEnabled(Controller.getInstance().getUIversion().getCurrentStation().getHangar() != null);
       }else{
           discardButton.setEnabled(false);
            mountButton.setEnabled(false);
            discardHangarButton.setEnabled(false);
       }
       
    }
    
    private void mountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mountButtonActionPerformed
        // TODO add your handling code here:  
        ArrayList<Integer> weaponsSelected = new ArrayList<>();
        ArrayList<Integer> shieldsSelected = new ArrayList<>();
        
        hangarView.getSelectedInHangar(weaponsSelected, shieldsSelected);
        Controller.getInstance().mount(weaponsSelected, shieldsSelected);
        
        updateView();
    }//GEN-LAST:event_mountButtonActionPerformed

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
        ArrayList<Integer> weaponsMountedSelected = getSelectedWeaponsMounted();
        ArrayList<Integer> shieldsMountedSelected = getSelectedShieldsMounted();
        
        ArrayList<Integer> weaponsSelectedInHangar = new ArrayList<>();
        ArrayList<Integer> shieldsSelectedInHangar = new ArrayList<>();
        
        Controller.getInstance().discard(Controller.WEAPON, weaponsMountedSelected, shieldsMountedSelected);
        Controller.getInstance().discard(Controller.SHIELD, weaponsMountedSelected, shieldsMountedSelected);
        
        if(Controller.getInstance().getUIversion().getCurrentStation().getHangar() != null){
            hangarView.getSelectedInHangar(weaponsSelectedInHangar, shieldsSelectedInHangar);
            Controller.getInstance().discard(Controller.HANGAR, weaponsSelectedInHangar, shieldsSelectedInHangar);
        }
        updateView();
    }//GEN-LAST:event_discardButtonActionPerformed

    private void discardHangarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardHangarButtonActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().discardHangar();
        updateView();
    }//GEN-LAST:event_discardHangarButtonActionPerformed


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ataque;
    private javax.swing.JLabel combustible;
    private javax.swing.JLabel defensa;
    private javax.swing.JButton discardButton;
    private javax.swing.JButton discardHangarButton;
    private javax.swing.JLabel medallas;
    private javax.swing.JButton mountButton;
    private javax.swing.JLabel nombre_estacion;
    private javax.swing.JPanel panelHangarStation;
    private javax.swing.JPanel panelShieldsMounted;
    private javax.swing.JPanel panelWeaponsMounted;
    private javax.swing.JPanel pendingDamage;
    private javax.swing.JScrollPane shieldsMounted;
    private javax.swing.JLabel titulo_ataque;
    private javax.swing.JLabel titulo_combustible;
    private javax.swing.JLabel titulo_defensa;
    private javax.swing.JLabel titulo_medallas;
    private javax.swing.JScrollPane weaponsMounted;
    // End of variables declaration//GEN-END:variables
}
