/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.GUI;
import View.DeepSpaceView;
import controller.Controller;
import java.util.ArrayList;
import javax.swing.JOptionPane;


import deepspace.SpaceStationToUI;  //BORRAR
import deepspace.CardDealer;       //QUITAR PUBLIC A LA CLASE Y BORRAR
import deepspace.SpaceStation;       //QUITAR PUBLIC A LA CLASE Y EL CONSTRUCTOR Y BORRAR
                                    //QUITAR PUBLIC AL TOUI DE WEAPON


/**
 *
 * @author Sergio
 */
public class MainWindow extends javax.swing.JFrame implements DeepSpaceView{

    
    private static MainWindow instance = null;
    
    private String appName = "DeepSpace";
    private StationView stationView;
    

    public static MainWindow getInstance () {
      if (instance == null) {
        instance = new MainWindow();
      }
      return instance;
    }
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setTitle (appName);
        repaint();
        setLocationRelativeTo(null);
        
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                Controller.getInstance().finish(0);
            }
        });
        
        
        
    }
    
    
    public void updateView(){
       
        repaint();
        revalidate();

    }
    
    @Override
    public ArrayList<String> readNamePlayers(){
        ReadName readNames = new ReadName(this);
        ArrayList<String> names = readNames.getNames();
        names.removeIf(e -> e.length() == 0);
        while(names.size()<2){
            errorInNamesMessage();
            names = readNames.getNames();
            names.removeIf(e -> e.length() == 0);
        }
        return names;

    }
     
     
    public void showView(){
        this.setVisible(true);
    }
    
    private void jbExitActionPerformed(java.awt.event.ActionEvent evt) {                                       
        Controller.getInstance().finish(0);
    }    
    
    @Override
    public boolean confirmExitMessage() {
        return (JOptionPane.showConfirmDialog(this, "¿Estás segur@ que deseas salir?", getAppName(), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
    }
    
    @Override
    public void errorInNamesMessage() {
        JOptionPane.showMessageDialog(this,"Se necesitan como mínimo dos jugadores","Error",JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override 
    public String getAppName() {
        return appName;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(396, 396, 396)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
       
        CardDealer dealer = CardDealer.getInstance();
     
        SpaceStation sp = new SpaceStation("ESTACION DE PRUEBA",dealer.nextSuppliesPackage());
        StationView s = new StationView();
        s.setStation(sp.getUIversion());
        jPanel2.add(s);

        repaint();
        revalidate();
        
    }//GEN-LAST:event_jButton1ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
